{"version":3,"sources":["components/Fullpage.js","components/Downicon.js","sections/TitlesAndIcons.js","sections/Aboutsection.js","components/Skillcards.js","sections/Skillsection.js","components/Themeicon.js","components/Scrollmenu.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","className","Component","Downicon","onClick","style","display","flexDirection","alignItems","justifyContent","marginBottom","transform","maxWidth","src","icon","height","width","TitlesAndIcons","state","color","changeColor","setState","data","sectionColor","first","onMouseOver","onMouseLeave","title","subtitle","Object","keys","links","map","key","url","activeClass","to","spy","smooth","offset","duration","delay","icons","down","name","Aboutsection","second","sections","items","p","content1","content2","content3","content4","Skillcards","skill","content","image","Skillsection","third","eachskill","Themeicon","position","left","alt","Scrollmenu","fontFamily","right","App","firstColor","secondColor","thirdColor","changetheme","animationInterval","theme","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1a2c6c5e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Fullpage.css\";\r\n\r\nclass Fullpage extends Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <div className={`fullpage ${this.props.className || \"\"}`}>{children}</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fullpage;\r\n","import React,{Component} from 'react';\r\n\r\nconst Downicon =(props)=> {\r\n    return (\r\n        <div\r\n            onClick={props.onClick}\r\n            style={{\r\n                display:\"flex\",\r\n                flexDirection:\"row\",\r\n                alignItems: \"center\",\r\n                justifyContent : \"center\",\r\n                marginBottom: \"-150px\" ,\r\n                transform : \"translateY(-150px)\"\r\n            }}\r\n        >\r\n            <div\r\n                style={{maxWidth : \"30px\"}}\r\n            >\r\n                <img src={props.icon}  style={{\r\n                    height : \"20px\",\r\n                    width :\"20 px\"\r\n                }}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Downicon","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport Downicon from \"../components/Downicon\";\r\nimport { Link, Element } from 'react-scroll';\r\n\r\nclass TitlesAndIcons extends Component {\r\n  state = {\r\n    color: \"white\",\r\n  };\r\n  changeColor = () => {\r\n    this.setState({\r\n      color: this.state.color === \"white\" ? \"red\" : \"white\",\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        \r\n        <Fullpage className={data.sectionColor.first}>\r\n          \r\n          <h1\r\n            style={{ color: this.state.color }}\r\n            onMouseOver={() => {\r\n              this.changeColor();\r\n            }}\r\n            onMouseLeave={() => {\r\n              this.changeColor();\r\n            }}\r\n          >\r\n            {data.title}\r\n          </h1>\r\n          <div>\r\n            <h2>{data.subtitle}</h2>\r\n          </div>\r\n          <div className=\"icons-wrapper\">\r\n            {Object.keys(data.links).map((key) => {\r\n              return (\r\n                <div className=\"icon\">\r\n                  <SocialIcon url={data.links[key]} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </Fullpage>\r\n        <Link activeClass=\"active\" to=\"About\" spy={true} smooth={true} offset={50} duration={500} delay={0}>\r\n        <Downicon \r\n          icon={data.icons.down}\r\n          // onClick={()=>{}} \r\n          />\r\n        </Link>\r\n        <Element name=\"About\" className=\"element\"></Element>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TitlesAndIcons;\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport './Aboutsection.css';\r\nimport Downicon from \"../components/Downicon\";\r\nimport { Link, Element } from 'react-scroll';\r\n\r\nclass Aboutsection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n      <Fullpage className={data.sectionColor.second}>\r\n        <h3>{data.sections[0].title}</h3>\r\n        <div className=\"paragraphs\">\r\n          {data.sections[0].items.map((p) => {\r\n            return <p>\r\n              {p.content1}\r\n              <br></br>\r\n              <br></br>\r\n              {p.content2}\r\n              <br></br>\r\n              <br></br>\r\n              {p.content3}\r\n              <br></br>\r\n              <br></br>\r\n              {p.content4}\r\n              </p>;\r\n          })}\r\n        </div>\r\n      </Fullpage>\r\n      <Link activeClass=\"active\" to=\"Skills\" spy={true} smooth={true} offset={50} duration={500} delay={0}>\r\n      <Downicon \r\n        icon={data.icons.down}\r\n        \r\n        />\r\n      </Link>\r\n      <Element name=\"Skills\" className=\"element\"></Element>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Aboutsection;\r\n","import React,{Component} from 'react';\r\nimport './Skillcards.css';\r\n\r\nclass Skillcards extends Component{\r\n    render(){\r\n        const {skill} =this.props;\r\n        return(\r\n            <div className=\"card\">\r\n                <div className=\"image-wrapper\">\r\n                  <img src={skill.content.image} className=\"imageStyle\" />\r\n                </div>\r\n                <div className=\"skill-title-wrapper\">\r\n                  <h4>{skill.content.title}</h4>\r\n                </div>\r\n              </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Skillcards","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport Skillcards from \"../components/Skillcards\";\r\n\r\nclass Skillsection extends Component {\r\n  render() {\r\n    return (\r\n      <Fullpage className={data.sectionColor.third}>\r\n        <h3>{data.sections[1].title}</h3>\r\n        <div className=\"cards-wrapper\">\r\n          {data.sections[1].items.map((eachskill) => {\r\n            return (\r\n              <Skillcards skill={eachskill}/>\r\n            );\r\n          })}\r\n        </div>\r\n      </Fullpage>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Skillsection;\r\n","import React, { Component } from \"react\";\r\n\r\nconst Themeicon = (props) => {\r\n  \r\n  return (\r\n    <div onClick={props.onClick} >\r\n    \r\n      <img\r\n        src={props.icon}\r\n        style={{\r\n          position: \"absolute\",\r\n          left: \"30px\",\r\n          height: \"40px\",\r\n          width: \"40 px\",\r\n        }}\r\n        alt=\"change theme\"\r\n        title=\"change theme\"\r\n      />\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Themeicon;\r\n","import React, { Component } from \"react\";\r\nimport { Link, Element } from 'react-scroll';\r\n\r\nconst Scrollmenu = (props) => {\r\n  return (\r\n    <div style={{fontFamily: \"Verdana, Geneva, Tahoma, sans-serif\" }}>\r\n      <Link activeClass=\"active\" to=\"About\" spy={true} smooth={true} offset={25} duration={500} delay={0}>\r\n      <div style={{ position: \"absolute\", right: \"50px\" }}>About </div>\r\n      </Link>\r\n      <Element name=\"About\" className=\"element\"></Element>\r\n\r\n      <Link activeClass=\"active\" to=\"Skills\" spy={true} smooth={true} offset={2000} duration={500} delay={0}>\r\n      <div style={{ position: \"absolute\", right: \"0\" }}>Skills </div>\r\n      </Link>\r\n      <Element name=\"Skills\" className=\"element\"></Element>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scrollmenu;\r\n","import React, { Component } from \"react\";\n\nimport TitlesAndIcons from \"./sections/TitlesAndIcons\";\nimport Aboutsection from \"./sections/Aboutsection\";\nimport Skillsection from \"./sections/Skillsection\";\n// import NavSection from \"./sections/Navsection\";\nimport \"./App.css\";\nimport data from \"./data.json\";\nimport Themeicon from \"./components/Themeicon\";\nimport Scrollmenu from \"./components/Scrollmenu\";\nimport SnowStorm from 'react-snowstorm';\n\n//function App() {\nclass App extends Component {\n  state = {\n    firstColor: \"first1\",\n    secondColor:\"second1\",\n    thirdColor:\"third1\"\n  };\n  changetheme = () => {\n    if (this.state.firstColor === \"first1\") {\n      this.state.firstColor = \"first2\";\n      this.state.secondColor = \"second2\";\n      this.state.thirdColor = \"third2\"\n      }\n    else if (this.state.firstColor === \"first2\") {\n      this.state.firstColor = \"first3\";\n      this.state.secondColor = \"second3\";\n      this.state.thirdColor = \"third3\"\n    }\n    else if (this.state.firstColor === \"first3\") {\n      this.state.firstColor = \"first1\";\n      this.state.secondColor = \"second1\";\n      this.state.thirdColor = \"third1\"\n    }\n    this.setState({\n      firstColor: this.state.firstColor,\n      secondColor : this.state.secondColor,\n      thirdColor :this.state.thirdColor\n    });\n    data.sectionColor.first = this.state.firstColor;\n    data.sectionColor.second = this.state.secondColor;\n    data.sectionColor.third = this.state.thirdColor;\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <SnowStorm   animationInterval={\"10\"} />\n        <Scrollmenu />\n        <Themeicon\n          icon={data.icons.theme}\n          onClick={() => {\n            this.changetheme();\n          }}\n        />\n\n        <TitlesAndIcons />\n        <Aboutsection />\n        <Skillsection />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}